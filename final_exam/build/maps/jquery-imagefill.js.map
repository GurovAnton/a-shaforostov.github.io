{"version":3,"sources":["jquery-imagefill.js"],"names":["$","fn","imagefill","options","fitImages","containersH","containersW","$container","each","imageAspect","this","find","settings","target","width","height","containerW","outerWidth","containerH","outerHeight","containerAspect","css","top","left","checkSizeChange","checkW","checkH","setTimeout","throttle","defaults","runOnce","extend","$img","addClass","position","containerPos","overflow","imagesLoaded","done","img","removeClass","jQuery"],"mappings":"CAqBG,SAASA,GAEVA,EAAEC,GAAGC,UAAY,SAASC,GAmCxB,QAASC,KACPC,EAAe,EACfC,EAAc,EACdC,EAAWC,KAAK,WACdC,EAAcT,EAAEU,MAAMC,KAAKC,EAASC,QAAQC,QAAUd,EAAEU,MAAMC,KAAKC,EAASC,QAAQE,QACpF,IAAIC,GAAahB,EAAEU,MAAMO,aACrBC,EAAalB,EAAEU,MAAMS,aACzBd,IAAeL,EAAEU,MAAMS,cACvBb,GAAeN,EAAEU,MAAMO,YAEvB,IAAIG,GAAkBJ,EAAWE,CACXT,GAAlBW,EAEFpB,EAAEU,MAAMC,KAAKC,EAASC,QAAQQ,KAC1BP,MAAO,OACPC,OAAQG,EACRI,IAAI,EACJC,OAAOL,EAAWT,EAAYO,GAAY,IAI9ChB,EAAEU,MAAMC,KAAKC,EAASC,QAAQQ,KAC1BP,MAAOE,EACPD,OAAQ,OACRO,MAAMN,EAAWP,EAAYS,GAAY,EACzCK,KAAK,MAMf,QAASC,KACP,GAAIC,GAAS,EACTC,EAAS,CACbnB,GAAWC,KAAK,WACdkB,GAAU1B,EAAEU,MAAMS,cAClBM,GAAUzB,EAAEU,MAAMO,eAEhBZ,IAAgBqB,GAAUpB,IAAgBmB,GAC5CrB,IAEFuB,WAAWH,EAAiBZ,EAASgB,UA1EvC,GAAIrB,GAAaG,KACbD,EAAc,EACdJ,EAAc,EACdC,EAAc,EACduB,GACEC,SAAS,EACTjB,OAAQ,MACRe,SAAW,KAEbhB,EAAWZ,EAAE+B,UAAWF,EAAU1B,GAElC6B,EAAOzB,EAAWI,KAAKC,EAASC,QAAQoB,SAAS,WAAWZ,KAAKa,SAAW,aAG5EC,EAAe5B,EAAWc,IAAI,WA+DlC,OA9DAd,GAAWc,KAAKe,SAAW,SAASF,SAA6B,WAAjBC,EAA6B,WAAaA,IAG1F5B,EAAWC,KAAK,WACdH,GAAeL,EAAEU,MAAMS,cACvBb,GAAeN,EAAEU,MAAMO,eAIzBV,EAAW8B,eAAeC,KAAK,SAASC,GACtC9B,EAAcuB,EAAKlB,QAAUkB,EAAKjB,SAClCiB,EAAKQ,YAAY,WACjBpC,IACKQ,EAASkB,SACZN,MAgDGd,OAGT+B","file":"jquery-imagefill.js","sourcesContent":["/**\n * imagefill.js\n * Author & copyright (c) 2013: John Polacek\n * johnpolacek.com\n * https://twitter.com/johnpolacek\n *\n * Dual MIT & GPL license\n *\n * Project Page: http://johnpolacek.github.io/imagefill.js\n *\n * The jQuery plugin for making images fill their containers (and be centered)\n *\n * EXAMPLE\n * Given this html:\n * <div class=\"container\"><img src=\"myawesomeimage\" /></div>\n * $('.container').imagefill(); // image stretches to fill container\n *\n * REQUIRES:\n * imagesLoaded - https://github.com/desandro/imagesloaded\n *\n */\n ;(function($) {\n\n  $.fn.imagefill = function(options) {\n\n    var $container = this,\n        imageAspect = 1/1,\n        containersH = 0,\n        containersW = 0,\n        defaults = {\n          runOnce: false,\n          target: 'img',\n          throttle : 200  // 5fps\n        },\n        settings = $.extend({}, defaults, options);\n\n    var $img = $container.find(settings.target).addClass('loading').css({'position':'absolute'});\n\n    // make sure container isn't position:static\n    var containerPos = $container.css('position');\n    $container.css({'overflow':'hidden','position':(containerPos === 'static') ? 'relative' : containerPos});\n\n    // set containerH, containerW\n    $container.each(function() {\n      containersH += $(this).outerHeight();\n      containersW += $(this).outerWidth();\n    });\n\n    // wait for image to load, then fit it inside the container\n    $container.imagesLoaded().done(function(img) {\n      imageAspect = $img.width() / $img.height();\n      $img.removeClass('loading');\n      fitImages();\n      if (!settings.runOnce) {\n        checkSizeChange();\n      }\n    });\n\n    function fitImages() {\n      containersH  = 0;\n      containersW = 0;\n      $container.each(function() {\n        imageAspect = $(this).find(settings.target).width() / $(this).find(settings.target).height();\n        var containerW = $(this).outerWidth(),\n            containerH = $(this).outerHeight();\n        containersH += $(this).outerHeight();\n        containersW += $(this).outerWidth();\n\n        var containerAspect = containerW/containerH;\n        if (containerAspect < imageAspect) {\n          // taller\n          $(this).find(settings.target).css({\n              width: 'auto',\n              height: containerH,\n              top:0,\n              left:-(containerH*imageAspect-containerW)/2\n            });\n        } else {\n          // wider\n          $(this).find(settings.target).css({\n              width: containerW,\n              height: 'auto',\n              top:-(containerW/imageAspect-containerH)/2,\n              left:0\n            });\n        }\n      });\n    }\n\n    function checkSizeChange() {\n      var checkW = 0,\n          checkH = 0;\n      $container.each(function() {\n        checkH += $(this).outerHeight();\n        checkW += $(this).outerWidth();\n      });\n      if (containersH !== checkH || containersW !== checkW) {\n        fitImages();\n      }\n      setTimeout(checkSizeChange, settings.throttle);\n    }\n    \n    return this;\n  };\n\n}(jQuery));\n"],"sourceRoot":"/source/"}